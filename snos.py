import asyncio
import random
from hikka import utils, loader

class SnosMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —Å–Ω–æ—Å–∞ —á–µ—Ä–µ–∑ –∂–∞–ª–æ–±—ã"""
    strings = {"name": "SnosSystem"}

    async def snoscmd(self, message):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–Ω–æ—Å–∞"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, "‚ùå –£–∫–∞–∂–∏ —Ü–µ–ª—å –¥–ª—è —Å–Ω–æ—Å–∞, –¥–µ–±–∏–ª.")
            return

        target = args
        progress_msg = await utils.answer(message, "üî• –°–Ω–æ—Å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–∫–∞ –∂–∞–ª–æ–±...\n‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è 0%")
        
        progress = 0
        progress_bar = ["‚¨úÔ∏è"] * 10
        
        while progress <= 100:
            await asyncio.sleep(0.6)
            progress += 2
            
            # –ó–∞–º–µ–Ω—è–µ–º –∫—É–±–∏–∫ –∫–∞–∂–¥—ã–µ 10%
            if progress % 10 == 0 and progress > 0:
                progress_bar[progress//10 - 1] = "üü©"
            
            bar = "".join(progress_bar)
            await utils.answer(progress_msg, f"üî• –°–Ω–æ—Å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–∫–∞ –∂–∞–ª–æ–±...\n{bar} {progress}%")
        
        complaints = random.randint(200, 400)
        result_text = (
            f"‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –∂–∞–ª–æ–± –∑–∞–∫–æ–Ω—á–µ–Ω–∞\n\n"
            f"üìä –ñ–∞–ª–æ–±: {complaints}\n"
            f"üéØ –¶–µ–ª—å: {target}\n"
            f"üíÄ –°—Ç–∞—Ç—É—Å: –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, —É–∂–µ —Å–Ω–µ—Å–µ–Ω–æ"
        )
        
        await utils.answer(progress_msg, result_text)